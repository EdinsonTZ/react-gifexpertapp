{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","Protypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","catergories","ReactDOM","render","document","getElementById"],"mappings":"mNAEaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAqBhD,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAO,IAE9BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKd,SAGI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAvBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aA8B/BZ,EAAYe,SAAU,CAClBd,c,OAAec,EAASC,KAAKC,Y,mCCtCpBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAWH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAInC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAENxB,EAAUC,GACLwB,MAAO,SAAAC,GAEJC,YAAY,WAGRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,WAIb,CAACpB,IAEIqB,EDtB2BM,CAAc3B,GAAnCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,mCAAOpB,EAAP,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aES3BiB,EAxBM,WAAO,IAAD,EAEc7C,mBAAS,CAAC,cAFxB,mBAEhB8C,EAFgB,KAEH/C,EAFG,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAYpB,KAAM,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAaA,GADLA,YCVhC8B,IAASC,OAEP,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.3ec27a28.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Protypes from 'prop-types';\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length>1) {\r\n        //console.log('Submit realizado')\r\n        setCategories( cats => [ inputValue, ...cats, ]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            {/*<h1> { inputValue }</h1> */}\r\n\r\n            <input\r\n            type=\"text\"\r\n            value= {inputValue}\r\n            onChange= { handleInputChange }\r\n            ></input>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.Protypes ={\r\n    setCategories: Protypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category ) =>{\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI (category)}&limit=10&api_key=mhoMDFYsiVWL6B8mNz1kg3yW5hRq4g4T`\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifts = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifts;\r\n    \r\n}   \r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url }) => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            \r\n            <img src={ url } alt={ title }></img>\r\n            <p> { title } </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';  AHORA para que el codigo se mas corto utilice un CUSTOM HOOK en la carpeta hooks\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images, loading }  = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img =>(\r\n                            <GifGridItem \r\n                                key={ img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(( ) =>{\r\n\r\n        getGifs ( category )\r\n            .then ( imgs =>{\r\n\r\n                setTimeout( () => {\r\n                    \r\n                    //console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 1300);\r\n\r\n            })\r\n\r\n    },[category])\r\n    \r\n    return state; // el state es la data array{ data[], loading: true};\r\n\r\n}","import React , { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [catergories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    catergories.map  (category => (\r\n                        <GifGrid \r\n                        key = { category }\r\n                        category = { category }\r\n                        />)\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n \n\n\nReactDOM.render(\n   \n  <GifExpertApp />, document.getElementById('root')\n  \n);\n\n"],"sourceRoot":""}